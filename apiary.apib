FORMAT: 1A
HOST: http://private-8b88f1-etb.apiary-mock.com/

# ETB

This documents the API specs for the ETB project

## Users Microservice [/users]

### Sign up a new user [POST /register]

+ Response 200 (application/json)

        {
            "status": "success"
        }

+ Request (application/json)
    + Body

            {
              "phone": "092039029302",
              "email": "johndoe@example.com",
              "password": "secret"
            }

### Sign up a new user pase 2 [POST users/register/phase2]
+ Request
    + Headers
        api_token: 9EYobkJgowPE70SuELuPWrpiGLhdo14ZVCvzRy5UiJmO97kP4UILpFefw030
    
+ Response 200 (application/json)

        {
    "status": "failed",
    "message": "Client with externalId `5M8PiG1RPZ` already exists"
        }
+ Response 200 (application/json)

        {
       "status": "success",
    "data": {
        "id": 1,
        "account_id": "gRWxtE0XJA",
        "email": "johndoe@gmail.com",
        "phone": "+2478173018280",
        "bvn": null,
        "first_name": "yj",
        "middle_name": "jhjgk",
        "last_name": "ftyq",
        "date_of_birth": "12/01/1992",
        "pin": null,
        "gender": "male",
        "status": "active",
        "referral_code": "oZ1XOb",
        "created_at": "2018-05-23 13:50:03",
        "updated_at": "2018-05-31 18:42:19",
        "resource_id": 101,
        "office_id": 1,
        "client_id": 101,
        "savings_id": 38
    },
    "message": "user registeration completed successfully"
        }

+ Request (application/json)
    + Body

            {
              "phone": "092039029302",
              "email": "johndoe@example.com",
              "password": "secret"
            }

### Login to your account [POST /login]
+ Response 200 (application/json)

        {
            "status": "success",
             "api_key": "lnB0uw6nW8VwdR3JkU6zGbTKPrYBbJdDhRP0kSTU80jlgv1RDTGdzZyKxaDq"
        }
        
+ Response 401 (application/json)

        {
            "status": "failed",
             "message": "user does not exist"
        }
        
+ Response 401 (application/json)

        {
            "status": "failed",
             "message": "incorrect password"
        }

+ Request (application/json)
    + Body

            {
              "firstName": "john",
              "lastName": "doe",
              "middleName": "sandstorm",
              "dateOfBirth": "12/01/1992",
              "gender": "male"
            }
            
### Update a user [PUT /users/profile]
+ Request
    + Headers
        api_token: 9EYobkJgowPE70SuELuPWrpiGLhdo14ZVCvzRy5UiJmO97kP4UILpFefw030
    
+ Response 200 (application/json)

        {
       "status": "success",
    "data": {
        "id": 1,
        "account_id": "gRWxtE0XJA",
        "email": "johndoe@gmail.com",
        "phone": "+2478173018280",
        "bvn": null,
        "first_name": "yj",
        "middle_name": "jhjgk",
        "last_name": "ftyq",
        "date_of_birth": "12/01/1992",
        "pin": null,
        "gender": "male",
        "status": "active",
        "referral_code": "oZ1XOb",
        "created_at": "2018-05-23 13:50:03",
        "updated_at": "2018-05-31 18:42:19",
        "resource_id": 101,
        "office_id": 1,
        "client_id": 101,
        "savings_id": 38
    },
    "message": "user registeration completed successfully"
        }
        
        + Request (application/json)
    + Body

            {
              "firstName": "john",
              "lastName": "doe",
              "middleName": "sandstorm",
              "dateOfBirth": "12/01/1992",
              "gender": "male"
            }

### Forgot password [GET /forgotpassword]

### Set a new password [GET /setnewpassword]

### setBankDetails [GET /banks]
+ Response 200 (application/json)

    {
    "status": "success",
    "data": [
        {
            "name": "ACCESS BANK NIGERIA",
            "code": "044",
            "country": "NG"
        },
        {
            "name": "ACCESS MOBILE",
            "code": "323",
            "country": "NG"
        },
        {
            "name": "AFRIBANK NIGERIA PLC",
            "code": "014",
            "country": "NG"
        },
        {
            "name": "Aso Savings and Loans",
            "code": "401",
            "country": "NG"
        },
        {
            "name": "DIAMOND BANK PLC",
            "code": "063",
            "country": "NG"
        },
        {
            "name": "Ecobank Mobile",
            "code": "307",
            "country": "NG"
        },
        {
            "name": "ECOBANK NIGERIA PLC",
            "code": "050",
            "country": "NG"
        },
        {
            "name": "ENTERPRISE BANK LIMITED",
            "code": "084",
            "country": "NG"
        },
        {
            "name": "FBN MOBILE",
            "code": "309",
            "country": "NG"
        },
        {
            "name": "FIDELITY BANK PLC",
            "code": "070",
            "country": "NG"
        },
        {
            "name": "FIRST BANK PLC",
            "code": "011",
            "country": "NG"
        },
        {
            "name": "FIRST CITY MONUMENT BANK PLC",
            "code": "214",
            "country": "NG"
        },
        {
            "name": "GTBank Mobile Money",
            "code": "315",
            "country": "NG"
        },
        {
            "name": "GTBANK PLC",
            "code": "058",
            "country": "NG"
        },
        {
            "name": "HERITAGE BANK",
            "code": "030",
            "country": "NG"
        },
        {
            "name": "KEYSTONE BANK PLC",
            "code": "082",
            "country": "NG"
        },
        {
            "name": "Parkway",
            "code": "311",
            "country": "NG"
        },
        {
            "name": "PAYCOM",
            "code": "305",
            "country": "NG"
        },
        {
            "name": "SKYE BANK PLC",
            "code": "076",
            "country": "NG"
        },
        {
            "name": "STANBIC IBTC BANK PLC",
            "code": "221",
            "country": "NG"
        },
        {
            "name": "Stanbic Mobile",
            "code": "304",
            "country": "NG"
        },
        {
            "name": "STANDARD CHARTERED BANK NIGERIA LIMITED",
            "code": "068",
            "country": "NG"
        },
        {
            "name": "STERLING BANK PLC",
            "code": "232",
            "country": "NG"
        },
        {
            "name": "UNION BANK OF NIGERIA PLC",
            "code": "032",
            "country": "NG"
        },
        {
            "name": "UNITED BANK FOR AFRICA PLC",
            "code": "033",
            "country": "NG"
        },
        {
            "name": "UNITY BANK PLC",
            "code": "215",
            "country": "NG"
        },
        {
            "name": "WEMA BANK PLC",
            "code": "035",
            "country": "NG"
        },
        {
            "name": "ZENITH BANK PLC",
            "code": "057",
            "country": "NG"
        },
        {
            "name": "ZENITH Mobile",
            "code": "322",
            "country": "NG"
        },
        {
            "name": "Coronation Merchant Bank",
            "code": "559",
            "country": "NG"
        },
        {
            "name": "FSDH Merchant Bank Limited",
            "code": "601",
            "country": "NG"
        },
        {
            "name": "PARRALEX BANK",
            "code": "526",
            "country": "NG"
        },
        {
            "name": "Providus Bank",
            "code": "101",
            "country": "NG"
        }
    ]
}

### Get a user [GET /users]
+ Response 200 (application/json)

        {
            "status": "success",
                "data   ": {
        "id": null,
        "account_id": "gRWxtE0XJA",
        "email": "johndoe@gmail.com",
        "password": "$2y$10$pPrnXP3nIewtji2ZbncR.eKUBclkOw1ltHUL0AKH72vuGAxAHeH3K",
        "phone": "+2478173018280",
        "bvn": null,
        "api_token": "k6tDzHbzva2pge9LH92ToN73Ly2gH6ZqpcYUYzdvYrV3hk4XdTD4nriPGm9j",
        "first_name": "john",
        "middle_name": "sandstorm",
        "last_name": "doe",
        "date_of_birth": "12/01/1992",
        "pin": null,
        "gender": "male",
        "status": "active",
        "referral_code": "oZ1XOb",
        "created_at": null,
        "updated_at": null,
        "resource_id": 101,
        "office_id": 1,
        "client_id": 101,
        "savings_id": 38,
        "user_id": null,
        "amount": null
    }
        }
        
      + Response 401 (application/text)
Unauthorized.
+request
 + Headers
        api_token: 9EYobkJgowPE70SuELuPWrpiGLhdo14ZVCvzRy5UiJmO97kP4UILpFefw030

### Report Issue [GET /users/:userId/reportIssue]

### Set Pin [POST /users/setPin]
+ Response 200 (application/json)

        {
    "status": "success",
    "message": "Pin created successfully"
    }
    
    + Response 200 (application/json)

        {
       "status": "failed",
    "message": [
        "pin should be 4 digits long"
    ]
    }
    
            
        + Request (application/json)
    + Body

            {
              "pin": "6719",
            }
            
    
          + Response 401 (application/text)
Unauthorized.
+request
 + Headers
        api_token: 9EYobkJgowPE70SuELuPWrpiGLhdo14ZVCvzRy5UiJmO97kP4UILpFefw030
        
### setBankDetails [POST /users/setBankDetails]

             + Request (application/json)
    + Body
            {
              "bank_name": "ACCESS BANK NIGERIA",
              "bank_code": 004,
              "account_number": 0690000031
            }
            +request
 + Headers
        api_token: 9EYobkJgowPE70SuELuPWrpiGLhdo14ZVCvzRy5UiJmO97kP4UILpFefw030
        
               + Response 200 (application/json)

        {
      "status": "success",
    "message": "bank details created successfully"
    }
        
            + Response 200 (application/json)

        {
       "status": "failed",
       "message": [
        "account number already exists in our system"
    ]
    }

### Validate Pin [GET /users/validatePin]
+ Response 200 (application/json)

        {
    "status": "success",
    "message": "Pin created successfully"
    }
    
    + Response 200 (application/json)

        {
  "status": "success",
    "message": "pin validated successfully"
    }
    
      + Response 200 (application/json)

{
    "status": "failed",
    "message": "incorrect pin!"
}
    
    
            
        + Request (application/json)
    + Body

            {
              "pin": "6719",
            }
            
    
    + Response 401 (application/text)
        Unauthorized.
+request
 + Headers
        api_token: 9EYobkJgowPE70SuELuPWrpiGLhdo14ZVCvzRy5UiJmO97kP4UILpFefw030

### Verify BVN [GET /users/verifyBvn]
  +request
    + Headers
        api_token: 9EYobkJgowPE70SuELuPWrpiGLhdo14ZVCvzRy5UiJmO97kP4UILpFefw030
        
+ Response 200 (application/json)

        {
       "status": "success",
    "data": {
        "status": "success",
        "message": "BVN",
        "data": {
            "transactionReference": "FLW000974716",
            "responseMessage": "Please enter the otp sent to 070****3016 for Validation",
            "responseCode": "00"
        }
    }
    }
    
    + Response 200 (application/json)

        {
       "status": "error"
    }
    
    + Response 401 (application/text)
        Unauthorized.
      
        
             + Request (application/json)
    + Body

            {
              "bvn": "12345678901",
            }

### Complete BVN Verification [GET /users/completeVerifyBvn]
             + Request (application/json)
    + Body

            {
              "bvn_otp": "12345",
            }
            +request
 + Headers
        api_token: 9EYobkJgowPE70SuELuPWrpiGLhdo14ZVCvzRy5UiJmO97kP4UILpFefw030
        
               + Response 200 (application/json)

        {
       "status": "success",
       "message": "validation complete"
    }
        
            + Response 200 (application/json)

        {
       "status": "error",
       "message": "Please use your BVN number"
    }
    
        
    

## Loans Microservice [/loans]

### Get loan repayments [GET /loanrepayments]

### Make loan repayment [POST /loanrepayments/:loanId]

### Create loan [POST /loans]

### Get loan decision [GET /loans/:loanId/decision]

### Approve loan [POST /loans/:loanId/approve]

### Get loan [PUT /loans/:loanId]

### Get loans [GET /loans]

## Savings Microservice [/savings]

### Get saving [GET /savings/:savingsId]

+ Request
    + Headers
        api_token: 9EYobkJgowPE70SuELuPWrpiGLhdo14ZVCvzRy5UiJmO97kP4UILpFefw030
        
+ Response 200 (application/json)

        {
    "status": "success",
    "data": 33000
    }
    


### Withdraw savings [POST /savings/:savingsId/withdraw]
+ Response 200 (application/json)
        {
    "status": "success",
    "data": {
        "developerMessage": "The request was invalid. This typically will happen due to validation errors which are provided.",
        "httpStatusCode": "400",
        "defaultUserMessage": "Validation errors exist.",
        "userMessageGlobalisationCode": "validation.msg.validation.errors.exist",
        "errors": [
            {
                "developerMessage": "Withdrawal is not allowed. No withdrawals are allowed until after 06 June 2018",
                "defaultUserMessage": "Withdrawal is not allowed. No withdrawals are allowed until after 06 June 2018",
                "userMessageGlobalisationCode": "error.msg.savingsaccount.transaction.withdrawals.blocked.during.lockin.period",
                "parameterName": "transactionDate",
                "value": null,
                "args": [
                    {
                        "value": "02 June 2018"
                    },
                    {
                        "value": "06 June 2018"
                    }
                ]
            }
        ]
    }
    }
    
          + Request (application/json)
    + Body

            {
              "transactionAmount": "10000",
            }
            +request
 + Headers
        api_token: 9EYobkJgowPE70SuELuPWrpiGLhdo14ZVCvzRy5UiJmO97kP4UILpFefw030

### Get savings transactions [GET savings/savingstransactions]
+ Request
    + Headers
        api_token: 9EYobkJgowPE70SuELuPWrpiGLhdo14ZVCvzRy5UiJmO97kP4UILpFefw030
        
+ Response 200 (application/json)


{
    "status": "success",
    "data": [
        {
            "id": 44,
            "transactionType": {
                "id": 3,
                "code": "savingsAccountTransactionType.interestPosting",
                "value": "Interest posting",
                "deposit": false,
                "dividendPayout": false,
                "withdrawal": false,
                "interestPosting": true,
                "feeDeduction": false,
                "initiateTransfer": false,
                "approveTransfer": false,
                "withdrawTransfer": false,
                "rejectTransfer": false,
                "overdraftInterest": false,
                "writtenoff": false,
                "overdraftFee": true,
                "withholdTax": false,
                "escheat": false,
                "amountHold": false,
                "amountRelease": false
            },
            "accountId": 23,
            "accountNo": "000000023",
            "date": [
                2018,
                6,
                1
            ],
            "currency": {
                "code": "USD",
                "name": "US Dollar",
                "decimalPlaces": 2,
                "inMultiplesOf": 0,
                "displaySymbol": "$",
                "nameCode": "currency.USD",
                "displayLabel": "US Dollar ($)"
            },
            "amount": 9.45,
            "runningBalance": 33009.45,
            "reversed": false,
            "submittedOnDate": [
                2018,
                5,
                31
            ],
            "interestedPostedAsOn": false
        },
        {
            "id": 34,
            "transactionType": {
                "id": 1,
                "code": "savingsAccountTransactionType.deposit",
                "value": "Deposit",
                "deposit": true,
                "dividendPayout": false,
                "withdrawal": false,
                "interestPosting": false,
                "feeDeduction": false,
                "initiateTransfer": false,
                "approveTransfer": false,
                "withdrawTransfer": false,
                "rejectTransfer": false,
                "overdraftInterest": false,
                "writtenoff": false,
                "overdraftFee": true,
                "withholdTax": false,
                "escheat": false,
                "amountHold": false,
                "amountRelease": false
            },
            "accountId": 23,
            "accountNo": "000000023",
            "date": [
                2018,
                5,
                31
            ],
            "currency": {
                "code": "USD",
                "name": "US Dollar",
                "decimalPlaces": 2,
                "inMultiplesOf": 0,
                "displaySymbol": "$",
                "nameCode": "currency.USD",
                "displayLabel": "US Dollar ($)"
            },
            "amount": 3000,
            "runningBalance": 33000,
            "reversed": false,
            "submittedOnDate": [
                2018,
                5,
                31
            ],
            "interestedPostedAsOn": false,
            "submittedByUsername": "mifos"
        },
        {
            "id": 33,
            "transactionType": {
                "id": 1,
                "code": "savingsAccountTransactionType.deposit",
                "value": "Deposit",
                "deposit": true,
                "dividendPayout": false,
                "withdrawal": false,
                "interestPosting": false,
                "feeDeduction": false,
                "initiateTransfer": false,
                "approveTransfer": false,
                "withdrawTransfer": false,
                "rejectTransfer": false,
                "overdraftInterest": false,
                "writtenoff": false,
                "overdraftFee": true,
                "withholdTax": false,
                "escheat": false,
                "amountHold": false,
                "amountRelease": false
            },
            "accountId": 23,
            "accountNo": "000000023",
            "date": [
                2018,
                5,
                31
            ],
            "currency": {
                "code": "USD",
                "name": "US Dollar",
                "decimalPlaces": 2,
                "inMultiplesOf": 0,
                "displaySymbol": "$",
                "nameCode": "currency.USD",
                "displayLabel": "US Dollar ($)"
            },
            "amount": 3000,
            "runningBalance": 30000,
            "reversed": false,
            "submittedOnDate": [
                2018,
                5,
                31
            ],
            "interestedPostedAsOn": false,
            "submittedByUsername": "mifos"
        },
        {
            "id": 32,
            "transactionType": {
                "id": 1,
                "code": "savingsAccountTransactionType.deposit",
                "value": "Deposit",
                "deposit": true,
                "dividendPayout": false,
                "withdrawal": false,
                "interestPosting": false,
                "feeDeduction": false,
                "initiateTransfer": false,
                "approveTransfer": false,
                "withdrawTransfer": false,
                "rejectTransfer": false,
                "overdraftInterest": false,
                "writtenoff": false,
                "overdraftFee": true,
                "withholdTax": false,
                "escheat": false,
                "amountHold": false,
                "amountRelease": false
            },
            "accountId": 23,
            "accountNo": "000000023",
            "date": [
                2018,
                5,
                31
            ],
            "currency": {
                "code": "USD",
                "name": "US Dollar",
                "decimalPlaces": 2,
                "inMultiplesOf": 0,
                "displaySymbol": "$",
                "nameCode": "currency.USD",
                "displayLabel": "US Dollar ($)"
            },
            "amount": 3000,
            "runningBalance": 27000,
            "reversed": false,
            "submittedOnDate": [
                2018,
                5,
                31
            ],
            "interestedPostedAsOn": false,
            "submittedByUsername": "mifos"
        },
        {
            "id": 31,
            "transactionType": {
                "id": 1,
                "code": "savingsAccountTransactionType.deposit",
                "value": "Deposit",
                "deposit": true,
                "dividendPayout": false,
                "withdrawal": false,
                "interestPosting": false,
                "feeDeduction": false,
                "initiateTransfer": false,
                "approveTransfer": false,
                "withdrawTransfer": false,
                "rejectTransfer": false,
                "overdraftInterest": false,
                "writtenoff": false,
                "overdraftFee": true,
                "withholdTax": false,
                "escheat": false,
                "amountHold": false,
                "amountRelease": false
            },
            "accountId": 23,
            "accountNo": "000000023",
            "date": [
                2018,
                5,
                31
            ],
            "currency": {
                "code": "USD",
                "name": "US Dollar",
                "decimalPlaces": 2,
                "inMultiplesOf": 0,
                "displaySymbol": "$",
                "nameCode": "currency.USD",
                "displayLabel": "US Dollar ($)"
            },
            "amount": 3000,
            "runningBalance": 24000,
            "reversed": false,
            "submittedOnDate": [
                2018,
                5,
                31
            ],
            "interestedPostedAsOn": false,
            "submittedByUsername": "mifos"
        },
        {
            "id": 30,
            "transactionType": {
                "id": 1,
                "code": "savingsAccountTransactionType.deposit",
                "value": "Deposit",
                "deposit": true,
                "dividendPayout": false,
                "withdrawal": false,
                "interestPosting": false,
                "feeDeduction": false,
                "initiateTransfer": false,
                "approveTransfer": false,
                "withdrawTransfer": false,
                "rejectTransfer": false,
                "overdraftInterest": false,
                "writtenoff": false,
                "overdraftFee": true,
                "withholdTax": false,
                "escheat": false,
                "amountHold": false,
                "amountRelease": false
            },
            "accountId": 23,
            "accountNo": "000000023",
            "date": [
                2018,
                5,
                31
            ],
            "currency": {
                "code": "USD",
                "name": "US Dollar",
                "decimalPlaces": 2,
                "inMultiplesOf": 0,
                "displaySymbol": "$",
                "nameCode": "currency.USD",
                "displayLabel": "US Dollar ($)"
            },
            "amount": 3000,
            "runningBalance": 21000,
            "reversed": false,
            "submittedOnDate": [
                2018,
                5,
                31
            ],
            "interestedPostedAsOn": false,
            "submittedByUsername": "mifos"
        },
        {
            "id": 29,
            "transactionType": {
                "id": 1,
                "code": "savingsAccountTransactionType.deposit",
                "value": "Deposit",
                "deposit": true,
                "dividendPayout": false,
                "withdrawal": false,
                "interestPosting": false,
                "feeDeduction": false,
                "initiateTransfer": false,
                "approveTransfer": false,
                "withdrawTransfer": false,
                "rejectTransfer": false,
                "overdraftInterest": false,
                "writtenoff": false,
                "overdraftFee": true,
                "withholdTax": false,
                "escheat": false,
                "amountHold": false,
                "amountRelease": false
            },
            "accountId": 23,
            "accountNo": "000000023",
            "date": [
                2018,
                5,
                31
            ],
            "currency": {
                "code": "USD",
                "name": "US Dollar",
                "decimalPlaces": 2,
                "inMultiplesOf": 0,
                "displaySymbol": "$",
                "nameCode": "currency.USD",
                "displayLabel": "US Dollar ($)"
            },
            "amount": 3000,
            "runningBalance": 18000,
            "reversed": false,
            "submittedOnDate": [
                2018,
                5,
                31
            ],
            "interestedPostedAsOn": false,
            "submittedByUsername": "mifos"
        },
        {
            "id": 26,
            "transactionType": {
                "id": 1,
                "code": "savingsAccountTransactionType.deposit",
                "value": "Deposit",
                "deposit": true,
                "dividendPayout": false,
                "withdrawal": false,
                "interestPosting": false,
                "feeDeduction": false,
                "initiateTransfer": false,
                "approveTransfer": false,
                "withdrawTransfer": false,
                "rejectTransfer": false,
                "overdraftInterest": false,
                "writtenoff": false,
                "overdraftFee": true,
                "withholdTax": false,
                "escheat": false,
                "amountHold": false,
                "amountRelease": false
            },
            "accountId": 23,
            "accountNo": "000000023",
            "date": [
                2018,
                5,
                31
            ],
            "currency": {
                "code": "USD",
                "name": "US Dollar",
                "decimalPlaces": 2,
                "inMultiplesOf": 0,
                "displaySymbol": "$",
                "nameCode": "currency.USD",
                "displayLabel": "US Dollar ($)"
            },
            "amount": 2000,
            "runningBalance": 15000,
            "reversed": false,
            "submittedOnDate": [
                2018,
                5,
                30
            ],
            "interestedPostedAsOn": false,
            "submittedByUsername": "mifos"
        },
        {
            "id": 28,
            "transactionType": {
                "id": 1,
                "code": "savingsAccountTransactionType.deposit",
                "value": "Deposit",
                "deposit": true,
                "dividendPayout": false,
                "withdrawal": false,
                "interestPosting": false,
                "feeDeduction": false,
                "initiateTransfer": false,
                "approveTransfer": false,
                "withdrawTransfer": false,
                "rejectTransfer": false,
                "overdraftInterest": false,
                "writtenoff": false,
                "overdraftFee": true,
                "withholdTax": false,
                "escheat": false,
                "amountHold": false,
                "amountRelease": false
            },
            "accountId": 23,
            "accountNo": "000000023",
            "date": [
                2018,
                5,
                30
            ],
            "currency": {
                "code": "USD",
                "name": "US Dollar",
                "decimalPlaces": 2,
                "inMultiplesOf": 0,
                "displaySymbol": "$",
                "nameCode": "currency.USD",
                "displayLabel": "US Dollar ($)"
            },
            "amount": 5000,
            "runningBalance": 13000,
            "reversed": false,
            "submittedOnDate": [
                2018,
                5,
                30
            ],
            "interestedPostedAsOn": false,
            "submittedByUsername": "mifos"
        },
        {
            "id": 27,
            "transactionType": {
                "id": 1,
                "code": "savingsAccountTransactionType.deposit",
                "value": "Deposit",
                "deposit": true,
                "dividendPayout": false,
                "withdrawal": false,
                "interestPosting": false,
                "feeDeduction": false,
                "initiateTransfer": false,
                "approveTransfer": false,
                "withdrawTransfer": false,
                "rejectTransfer": false,
                "overdraftInterest": false,
                "writtenoff": false,
                "overdraftFee": true,
                "withholdTax": false,
                "escheat": false,
                "amountHold": false,
                "amountRelease": false
            },
            "accountId": 23,
            "accountNo": "000000023",
            "date": [
                2018,
                5,
                30
            ],
            "currency": {
                "code": "USD",
                "name": "US Dollar",
                "decimalPlaces": 2,
                "inMultiplesOf": 0,
                "displaySymbol": "$",
                "nameCode": "currency.USD",
                "displayLabel": "US Dollar ($)"
            },
            "amount": 5000,
            "runningBalance": 8000,
            "reversed": false,
            "submittedOnDate": [
                2018,
                5,
                30
            ],
            "interestedPostedAsOn": false,
            "submittedByUsername": "mifos"
        },
        {
            "id": 25,
            "transactionType": {
                "id": 1,
                "code": "savingsAccountTransactionType.deposit",
                "value": "Deposit",
                "deposit": true,
                "dividendPayout": false,
                "withdrawal": false,
                "interestPosting": false,
                "feeDeduction": false,
                "initiateTransfer": false,
                "approveTransfer": false,
                "withdrawTransfer": false,
                "rejectTransfer": false,
                "overdraftInterest": false,
                "writtenoff": false,
                "overdraftFee": true,
                "withholdTax": false,
                "escheat": false,
                "amountHold": false,
                "amountRelease": false
            },
            "accountId": 23,
            "accountNo": "000000023",
            "date": [
                2018,
                5,
                30
            ],
            "currency": {
                "code": "USD",
                "name": "US Dollar",
                "decimalPlaces": 2,
                "inMultiplesOf": 0,
                "displaySymbol": "$",
                "nameCode": "currency.USD",
                "displayLabel": "US Dollar ($)"
            },
            "amount": 2000,
            "runningBalance": 3000,
            "reversed": false,
            "submittedOnDate": [
                2018,
                5,
                30
            ],
            "interestedPostedAsOn": false,
            "submittedByUsername": "mifos"
        },
        {
            "id": 13,
            "transactionType": {
                "id": 1,
                "code": "savingsAccountTransactionType.deposit",
                "value": "Deposit",
                "deposit": true,
                "dividendPayout": false,
                "withdrawal": false,
                "interestPosting": false,
                "feeDeduction": false,
                "initiateTransfer": false,
                "approveTransfer": false,
                "withdrawTransfer": false,
                "rejectTransfer": false,
                "overdraftInterest": false,
                "writtenoff": false,
                "overdraftFee": true,
                "withholdTax": false,
                "escheat": false,
                "amountHold": false,
                "amountRelease": false
            },
            "accountId": 23,
            "accountNo": "000000023",
            "date": [
                2018,
                5,
                30
            ],
            "currency": {
                "code": "USD",
                "name": "US Dollar",
                "decimalPlaces": 2,
                "inMultiplesOf": 0,
                "displaySymbol": "$",
                "nameCode": "currency.USD",
                "displayLabel": "US Dollar ($)"
            },
            "amount": 1000,
            "runningBalance": 1000,
            "reversed": false,
            "submittedOnDate": [
                2018,
                5,
                30
            ],
            "interestedPostedAsOn": false,
            "submittedByUsername": "mifos"
        }
    ]
}


### Fund savings [POST /savings/:savingsId/fund]
+ Response 200 (application/json)

        {
    "status": "success",
    "message": "deposit made successfully"
    }
    
          + Request (application/json)
    + Body

            {
              "transactionAmount": "10000",
            }
            +request
 + Headers
        api_token: 9EYobkJgowPE70SuELuPWrpiGLhdo14ZVCvzRy5UiJmO97kP4UILpFefw030

### Create fixed savings [POST /fixedsavings]

+ Response 200 (application/json)

        {
    "status": "success",
    "message": "Fixed depost created successfully made successfully"
    "data": {
          "officeId": 2,
  "clientId": 101,
  "savingsId": 1,
  "resourceId": 1,
  "changes": {
    "status": {
      "id": 200,
      "code": "savingsAccountStatusType.approved",
      "value": "Approved",
      "submittedAndPendingApproval": false,
      "approved": true,
      "rejected": false,
      "withdrawnByApplicant": false,
      "active": false,
      "closed": false
    },
    "locale": "en",
    "dateFormat": "dd MMMM yyyy",
    "approvedOnDate": "02 june 2018"
  }
    }
    }
    
    + Response 200 (application/json)

 {
    "status": "success",
    "data": {
        "developerMessage": "The request was invalid. This typically will happen due to validation errors which are provided.",
        "httpStatusCode": "400",
        "defaultUserMessage": "Validation errors exist.",
        "userMessageGlobalisationCode": "validation.msg.validation.errors.exist",
        "errors": [
            {
                "developerMessage": "Failed data validation due to: no.applicable.interest.rate.is.found.based.on.amount.and.deposit.period.",
                "defaultUserMessage": "Failed data validation due to: no.applicable.interest.rate.is.found.based.on.amount.and.deposit.period.",
                "userMessageGlobalisationCode": "validation.msg.fixeddepositaccount.no.applicable.interest.rate.is.found.based.on.amount.and.deposit.period",
                "parameterName": null,
                "value": null,
                "args": [
                    {
                        "value": null
                    },
                    {
                        "value": []
                    }
                ]
            }
        ]
    }
}
    
          + Request (application/json)
    + Body

            {
              "transactionAmount": "10000",
            }
            +request
 + Headers
        api_token: 9EYobkJgowPE70SuELuPWrpiGLhdo14ZVCvzRy5UiJmO97kP4UILpFefw030

### Get fixed saving [GET savings/fixedsavings/:savingsId]
  + Response 200 (application/json)

 {
    "status": "success",
    "data": 10000
}
 
            +request
 + Headers
        api_token: 9EYobkJgowPE70SuELuPWrpiGLhdo14ZVCvzRy5UiJmO97kP4UILpFefw030


### Withdraw fixed savings [POST savings/fixedsavings/:savingsId/withdraw]

### Get fixedsavings transactions [GET savings/fixedsavingstransactions/:savingsId]
  + Response 200 (application/json)

{
    "status": "success",
    "data": [
        {
            "id": 40843,
            "transactionType": {
                "id": 1,
                "code": "savingsAccountTransactionType.deposit",
                "value": "Deposit",
                "deposit": true,
                "dividendPayout": false,
                "withdrawal": false,
                "interestPosting": false,
                "feeDeduction": false,
                "initiateTransfer": false,
                "approveTransfer": false,
                "withdrawTransfer": false,
                "rejectTransfer": false,
                "overdraftInterest": false,
                "writtenoff": false,
                "overdraftFee": true,
                "withholdTax": false,
                "escheat": false,
                "amountHold": false,
                "amountRelease": false
            },
            "accountId": 1667,
            "accountNo": "000001667",
            "date": [
                2018,
                3,
                24
            ],
            "currency": {
                "code": "USD",
                "name": "US Dollar",
                "decimalPlaces": 2,
                "inMultiplesOf": 100,
                "displaySymbol": "$",
                "nameCode": "currency.USD",
                "displayLabel": "US Dollar ($)"
            },
            "amount": 10000,
            "runningBalance": 10000,
            "reversed": false,
            "interestedPostedAsOn": false,
            "submittedByUsername": "mifos"
        }
    ]
}
 
            +request
 + Headers
        api_token: 9EYobkJgowPE70SuELuPWrpiGLhdo14ZVCvzRy5UiJmO97kP4UILpFefw030

### Fund fixed savings [POST /fixedsavings/:savingsId/fund]

## Send Money Microservice [/sendmoney]

### Get beneficiaries [GET /beneficiaries]

### Save beneficiaries [POST /beneficiaries]

### Delete beneficiary [DELETE /beneficiaries/:beneficiaryId]

### Send Money [POST /sendmoney]

### Get send money history [GET /sendmoneytransactions]

## Bills Microservice [/bills]

### Get bill categories [GET /billcategories]

### Get bills in a categories [GET /billcategories/:categoryId]

### Get bill transactions [GET /billtransactions]

### Get bill [GET /bill/:billId]

### Get purchase bill [POST /bill/:billId/purchase]

### Create recurring bill purchase [POST /bill/:billId/recurringpurchase]

### Get bill fee [POST /bill/:billId/fee]

### Save bill [POST /savedbills]

## Payment Methods Microservice [/paymentmethods]

### Create payment methods [POST /paymentmethods]

### Get payment method [GET /paymentmethods/:paymentMethodId]

### Get payment methods [GET /paymentmethods]

### Delete payment method [DELETE /paymentmethods/:paymentMethodId]

## Notifications [/notifications]

### Get notifications [GET /notifications]

### Create notification [POST /notifications]

### Get notification [GET /notifications/:notificationId]